<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Online Class Recorder</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 2rem; }
    #controls { margin-bottom: 1rem; }
    button { padding: .5rem 1rem; margin-right: .5rem; }
    video { width: 100%; max-width: 800px; border: 1px solid #ccc; }
  </style>
</head>
<body>
  <h1>5th Semester Class Recorder</h1>

  <div id="controls">
    <button id="startBtn">Start Recording</button>
    <button id="stopBtn" disabled>Stop Recording</button>
    <button id="downloadBtn" disabled>Download</button>
  </div>

  <video id="preview" autoplay muted></video>
  <video id="playback" controls style="display:none; margin-top:1rem;"></video>

  <script>
    const startBtn = document.getElementById('startBtn');
    const stopBtn = document.getElementById('stopBtn');
    const downloadBtn = document.getElementById('downloadBtn');
    const preview = document.getElementById('preview');
    const playback = document.getElementById('playback');

    let mediaRecorder;
    let recordedChunks = [];

    async function initMedia() {
      const stream = await navigator.mediaDevices.getDisplayMedia({
        video: { cursor: "motion" },
        audio: true
      });
      preview.srcObject = stream;
      return stream;
    }

    startBtn.addEventListener('click', async () => {
      startBtn.disabled = true;
      stopBtn.disabled = false;

      const stream = await initMedia();
      mediaRecorder = new MediaRecorder(stream, { mimeType: 'video/webm; codecs=vp9' });

      mediaRecorder.ondataavailable = e => {
        if (e.data.size > 0) recordedChunks.push(e.data);
      };

      mediaRecorder.onstop = () => {
        const blob = new Blob(recordedChunks, { type: 'video/webm' });
        const url = URL.createObjectURL(blob);

        playback.src = url;
        playback.style.display = 'block';
        downloadBtn.href = url;
        downloadBtn.download = `class-recording-${Date.now()}.webm`;
        downloadBtn.disabled = false;
      };

      mediaRecorder.start();
    });

    stopBtn.addEventListener('click', () => {
      mediaRecorder.stop();
      stopBtn.disabled = true;
      startBtn.disabled = false;
    });

    downloadBtn.addEventListener('click', () => {
      // download automatically when clicked
    });
  </script>
</body>
</html>
